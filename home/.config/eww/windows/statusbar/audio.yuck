(deflisten status_audio_sink "scripts/audio.py @DEFAULT_AUDIO_SINK@ listen sink")
(deflisten status_audio_source "scripts/audio.py @DEFAULT_AUDIO_SOURCE@ listen source")

(defvar audio_sink_scale_visible false)
(defwidget audio_sink []
  (eventbox
    :onhover "${EWW_CMD} update audio_sink_scale_visible=true"
    :onhoverlost "${EWW_CMD} update audio_sink_scale_visible=false"
    :onclick "scripts/audio.py @DEFAULT_AUDIO_SINK@ mute"
    (box
      :orientation "h"
      :space-evenly false
      (revealer
        :transition "slideleft"
        :reveal audio_sink_scale_visible
        (box
          :orientation "h"
          :space-evenly false
          (scale
            :class "scale-control"
            :value {status_audio_sink["volume"]}
            :onchange "scripts/audio.py @DEFAULT_AUDIO_SINK@ set {}"
            :max 101
            :min 0
          )
          (box :width 10 :orientation "h")
        )
      )
      (label
        :class "icon"
        :text {status_audio_sink["icon"]}
      )
    )
  )
)

(defvar audio_source_scale_visible false)
(defwidget audio_source []
  (eventbox
    :onhover "${EWW_CMD} update audio_source_scale_visible=true"
    :onhoverlost "${EWW_CMD} update audio_source_scale_visible=false"
    :onclick "scripts/audio.py @DEFAULT_AUDIO_SOURCE@ mute"
    (box
      :orientation "h"
      :space-evenly false
      (revealer
        :transition "slideleft"
        :reveal audio_source_scale_visible
        (box
          :orientation "h"
          :space-evenly false
          (scale
            :class "scale-control"
            :value {status_audio_source["volume"]}
            :onchange "scripts/audio.py @DEFAULT_AUDIO_SOURCE@ set {}"
            :max 101
            :min 0
          )
          (box :width 10 :orientation "h")
        )
      )
      (label
        :class "icon"
        :text '${status_audio_source["icon"]}'
      )
    )
  )
)

(defwidget status_audio []
  (box
    :orientation "h"
    :space-evenly false
    (audio_source)
    (audio_sink)
  )
)
